#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 0
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 0.8in
\rightmargin 1in
\bottommargin 0.8in
\headheight 0cm
\headsep 0cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\align center

\size larger
CSCE 221 Cover Page
\begin_inset VSpace bigskip
\end_inset

Ryan Wenham / 627002098 / ryanjw0903@tamu.edu
\size default

\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Quotation
Please list all sources in the table below including web pages which you
 used to solve or implement the current homework.
 If you fail to cite sources you can get a lower number of points or even
 zero, read more Aggie Honor System Office 
\begin_inset CommandInset href
LatexCommand href
target "http://aggiehonor.tamu.edu/"
literal "false"

\end_inset


\begin_inset VSpace defskip
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type of sources 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
People
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
sam
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Web pages (provide URL) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Printed material
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
your notes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Other Sources 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Quotation
I certify that I have listed all the sources that I used to develop the
 solutions/codes to the submitted work.
\end_layout

\begin_layout Quotation
“On my honor as an Aggie, I have neither given nor received any unauthorized
 help on this academic work.” 
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Your Name 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ryan Wenham
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Date 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\align center

\series bold
\size larger
Homework 2
\end_layout

\begin_layout Standard
\align center

\series bold
\size larger
due March 16 at 11:59 pm to eCampus
\end_layout

\begin_layout Enumerate
(20 points) Given two sorted lists, L1 and L2, write an efficient C++ code
 to compute L1 ∩ L2 using only the basic STL list operations.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Provide evidence of testing: submit your code
\end_layout

\begin_deeper
\begin_layout LyX-Code
#include <cstdlib> 
\end_layout

\begin_layout LyX-Code
#include <list> 
\end_layout

\begin_layout LyX-Code
#include <iostream> 
\end_layout

\begin_layout LyX-Code
using namespace std;
\end_layout

\begin_layout LyX-Code
void func(list<int> one, list<int> two){     
\end_layout

\begin_deeper
\begin_layout LyX-Code
list<int> result;     
\end_layout

\begin_layout LyX-Code
int i = 0;     int j = 0;     
\end_layout

\begin_layout LyX-Code
while(i<one.size() && j<two.size()){       
\end_layout

\begin_deeper
\begin_layout LyX-Code
 if(one[i] < two[j]){            
\end_layout

\begin_layout LyX-Code
  i++;         
\end_layout

\begin_layout LyX-Code
} else if(one[i]>two[j]){  
\end_layout

\begin_layout LyX-Code
          j++;         
\end_layout

\begin_layout LyX-Code
}else{            
\end_layout

\begin_layout LyX-Code
result.push_back(one[i]);            
\end_layout

\begin_layout LyX-Code
i++;  j++;        
\end_layout

\begin_layout LyX-Code
}     
\end_layout

\end_deeper
\begin_layout LyX-Code
}    
\end_layout

\begin_layout LyX-Code
for(int k = 0; k<result.size(); k++){         
\end_layout

\begin_deeper
\begin_layout LyX-Code
cout << result[k] << " ";     
\end_layout

\end_deeper
\begin_layout LyX-Code
}
\end_layout

\end_deeper
\begin_layout LyX-Code
}
\end_layout

\begin_layout LyX-Code
int main(){     
\end_layout

\begin_deeper
\begin_layout LyX-Code
vector<int> one {1,2,3,5,9};     
\end_layout

\begin_layout LyX-Code
vector<int> two {2,3,7,8,9,10};    
\end_layout

\begin_layout LyX-Code
func(one,two);
\end_layout

\end_deeper
\begin_layout LyX-Code
}
\end_layout

\end_deeper
\begin_layout Enumerate
What is the running time of your algorithm? 
\end_layout

\begin_deeper
\begin_layout Enumerate
The run time is O(one+two)
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace vfill
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
(20 points) Write a C++ recursive function that counts the number of nodes
 in a singly linked list.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Test your function using different singly linked lists.
 Include your code.
\end_layout

\begin_deeper
\begin_layout LyX-Code
int count(Node * n){     
\end_layout

\begin_deeper
\begin_layout LyX-Code
if(n == nullptr){
\end_layout

\begin_layout LyX-Code
 return 0;
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout LyX-Code
else {
\end_layout

\begin_layout LyX-Code
 return 1+count(n->next)
\end_layout

\begin_layout LyX-Code
}
\end_layout

\end_deeper
\begin_layout LyX-Code
}
\end_layout

\end_deeper
\begin_layout Enumerate
Write a recurrence relation that represents your algorithm.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
T(1) = 0
\end_layout

\begin_layout Enumerate
T(n) = T(n-1) + 1
\end_layout

\end_deeper
\begin_layout Enumerate
Solve the recurrence relation using the iterating or recursive tree method
 to obtain the running time of the algorithm in Big-O notation.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
T(n) = 1 + 1 + ...
 1(n-1)
\end_layout

\begin_layout Enumerate
O(n-1)
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset VSpace vfill
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
(20 points) Write a C++ recursive function that finds the maximum value
 in an array (or vector) of integers 
\emph on
without
\emph default
 using any loops.
\end_layout

\begin_deeper
\begin_layout Enumerate
Test your function using different input arrays.
 Include the code.
\end_layout

\begin_deeper
\begin_layout LyX-Code
int fdmax(vector<int> v, int n){ 
\end_layout

\begin_deeper
\begin_layout LyX-Code
if(n==1){ 
\end_layout

\begin_deeper
\begin_layout LyX-Code
return v[0]; 
\end_layout

\end_deeper
\begin_layout LyX-Code
} else{ 
\end_layout

\begin_deeper
\begin_layout LyX-Code
int temp = fdmax(v, n-1); 
\end_layout

\begin_layout LyX-Code
if(temp > v[n]){
\end_layout

\begin_deeper
\begin_layout LyX-Code
return temp; 
\end_layout

\end_deeper
\end_deeper
\begin_layout LyX-Code

\end_layout

\begin_deeper
\begin_layout LyX-Code
} 
\end_layout

\begin_layout LyX-Code
return v[n]; 
\end_layout

\begin_layout LyX-Code
}
\end_layout

\end_deeper
\end_deeper
\begin_layout LyX-Code
}
\end_layout

\begin_layout LyX-Code
Used same main as part One
\end_layout

\end_deeper
\begin_layout Enumerate
Write a recurrence relation that represents your algorithm.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
T(n) = T(n-1) + c
\end_layout

\end_deeper
\begin_layout Enumerate
Solve the recurrence relation and obtain the running time of the algorithm
 in Big-O notation.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
T(n) = c + c ...
 c(n-1)
\end_layout

\begin_layout Enumerate
O(n-1)
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset VSpace vfill
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
(20 points) What is the best, worst and average running time of quick sort
 algorithm? 
\end_layout

\begin_deeper
\begin_layout Enumerate
Provide recurrence relations and their solutions.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Best Case: T(n) = 2T(n/2)+n / O(n)
\end_layout

\begin_layout Enumerate
Average Case: T(n) = (n+1)T(n-1) + 2n / O(n logn)
\end_layout

\begin_layout Enumerate
Worst Case: T(n) = T(n-1) + n / O(n^2)
\end_layout

\end_deeper
\begin_layout Enumerate
Provide arrangement of the input and the selection of the pivot point for
 each case.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Best Case: 1,4,2,5,9,6,12 , Start piovt at value that partions with balnces
 sides so the median value be best, that will make the pivot 5
\end_layout

\begin_layout Enumerate
Avergae Case: 1,5,6, 2,9,4 Start pivot at end 4.
\end_layout

\begin_layout Enumerate
Worst Case: 1,4,19,23,27 Start pivot at 1
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset VSpace vfill
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
(20 points) Write a C++ function that counts the total number of nodes with
 two children in a binary tree (do not count nodes with one or none child).
 You can use a STL container if you need to use an additional data structure
 to solve this problem.
 Use the big-O notation to classify your algorithm.
 Include your code.
\end_layout

\begin_deeper
\begin_layout LyX-Code
int BinaryNode::size(BinaryNode *t) { 
\end_layout

\begin_layout LyX-Code
   if (t == nullptr)         
\end_layout

\begin_deeper
\begin_layout LyX-Code
   return 0;     
\end_layout

\begin_layout LyX-Code
if(t->left != nullptr && t->right != nullptr)         
\end_layout

\begin_deeper
\begin_layout LyX-Code
return 1 + size(t->left) + size(t->right);
\end_layout

\end_deeper
\begin_layout LyX-Code
if(t->left != nullptr && t->right == nullptr)          
\end_layout

\begin_deeper
\begin_layout LyX-Code
return 0 + size(t->left)
\end_layout

\end_deeper
\begin_layout LyX-Code
if(t->left == nullptr && t->right != nullptr)       
\end_layout

\begin_deeper
\begin_layout LyX-Code
return 0 + size(t->right)  
\end_layout

\end_deeper
\begin_layout LyX-Code
else       
\end_layout

\begin_layout LyX-Code
 return 0; 
\end_layout

\end_deeper
\begin_layout LyX-Code
}
\end_layout

\begin_layout LyX-Code
O(n)
\end_layout

\begin_layout Enumerate
\begin_inset VSpace vfill
\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Enumerate
(15 points) Describe in pseudo code how to implement the stack ADT using
 two queues.
\end_layout

\begin_deeper
\begin_layout Enumerate
Write a C++ function that implements your solution.
 You can use the C++ STL queue container.
 Include the code and screenshots with testing cases.
\end_layout

\begin_layout Enumerate
What is the running time of the push and pop functions in this case?
\end_layout

\end_deeper
\end_inset


\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
(10 points) What is the best, worst and average running time of merge sort
 algorithm? Use two methods for solving a recurrence relation for the average
 case to justify your answer.
\end_layout

\end_inset


\end_layout

\end_body
\end_document
